# Generated by carnix 0.6.5: carnix Cargo.lock -o crates.nix
{ lib, buildPlatform, buildRustCrate, fetchgit }:
let kernel = buildPlatform.parsed.kernel.name;
    abi = buildPlatform.parsed.abi.name;
    include = includedFiles: src: builtins.filterSource (path: type:
      lib.lists.any (f:
        let p = toString (src + ("/" + f)); in
        (path == p) || (type == "directory" && lib.strings.hasPrefix path p)
      ) includedFiles
    ) src;
    updateFeatures = f: up: functions: builtins.deepSeq f (lib.lists.foldl' (features: fun: fun features) (lib.attrsets.recursiveUpdate f up) functions);
    mapFeatures = features: map (fun: fun { features = features; });
    mkFeatures = feat: lib.lists.foldl (features: featureName:
      if feat.${featureName} or false then
        [ featureName ] ++ features
      else
        features
    ) [] (builtins.attrNames feat);
in
rec {
  all_crates = f: all_crates_1_1_1 { features = all_crates_1_1_1_features { all_crates_1_1_1 = f; }; };
  aho_corasick_0_6_4_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "aho-corasick";
    version = "0.6.4";
    authors = [ "Andrew Gallant <jamslam@gmail.com>" ];
    sha256 = "189v919mp6rzzgjp1khpn4zlq8ls81gh43x1lmc8kbkagdlpq888";
    libName = "aho_corasick";
    crateBin = [ {  name = "aho-corasick-dot"; } ];
    inherit dependencies buildDependencies features;
  };
  all_crates_1_1_1_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "all_crates";
    version = "1.1.1";
    authors = [  ];
    src = ./.;
    inherit dependencies buildDependencies features;
  };
  atty_0_2_6_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "atty";
    version = "0.2.6";
    authors = [ "softprops <d.tangren@gmail.com>" ];
    sha256 = "1y2nmvx04iqxaz4a5alhbgbpkdf1wqb7z0097qmw08b5iqhfa4wv";
    inherit dependencies buildDependencies features;
  };
  byteorder_1_2_1_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "byteorder";
    version = "1.2.1";
    authors = [ "Andrew Gallant <jamslam@gmail.com>" ];
    sha256 = "1wsxnqcscg4gchdmgdbwc78lw2qx2i6bnjd564xq7h7qc4fp2157";
    inherit dependencies buildDependencies features;
  };
  capnp_0_8_15_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "capnp";
    version = "0.8.15";
    authors = [ "David Renshaw <dwrenshaw@gmail.com>" ];
    sha256 = "0nnmp2lq8wjh3cj5nfa8nlmz0fln2dyjsy499n55xxk3yqwim7a4";
    libPath = "src/lib.rs";
    inherit dependencies buildDependencies features;
  };
  capnpc_0_8_8_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "capnpc";
    version = "0.8.8";
    authors = [ "David Renshaw <dwrenshaw@gmail.com>" ];
    sha256 = "1kxfkiv34ihb6xhc27nbink2x328gfa42p0m5bkkrmrmim3mghj9";
    libPath = "src/lib.rs";
    crateBin = [ {  name = "capnpc-rust";  path = "src/main.rs"; } ];
    inherit dependencies buildDependencies features;
  };
  cc_1_0_4_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "cc";
    version = "1.0.4";
    authors = [ "Alex Crichton <alex@alexcrichton.com>" ];
    sha256 = "1bhxmq231c62amw14lghz5xi2cjvm0r7kp3ajsj6zqw9843zwkfw";
    inherit dependencies buildDependencies features;
  };
  cfg_if_0_1_2_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "cfg-if";
    version = "0.1.2";
    authors = [ "Alex Crichton <alex@alexcrichton.com>" ];
    sha256 = "0x06hvrrqy96m97593823vvxcgvjaxckghwyy2jcyc8qc7c6cyhi";
    inherit dependencies buildDependencies features;
  };
  chrono_0_4_0_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "chrono";
    version = "0.4.0";
    authors = [ "Kang Seonghoon <public+rust@mearie.org>" ];
    sha256 = "0hm53hi6v7b6b1va6vn96lx26wvj8gzi2g51s1j02nlz0jcprw6a";
    inherit dependencies buildDependencies features;
  };
  env_logger_0_5_3_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "env_logger";
    version = "0.5.3";
    authors = [ "The Rust Project Developers" ];
    sha256 = "1i7jyxrwwv3w2h200ynq3fjg1iyyvi76ny215hi6d334vkkw2s2y";
    inherit dependencies buildDependencies features;
  };
  generate_msg_0_1_0_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "generate-msg";
    version = "0.1.0";
    authors = [ "pe@pijul.org <pe@pijul.org>" ];
    src = ../generate-msg;
    inherit dependencies buildDependencies features;
  };
  lazy_static_1_0_0_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "lazy_static";
    version = "1.0.0";
    authors = [ "Marvin LÃ¶bel <loebel.marvin@gmail.com>" ];
    sha256 = "0wfvqyr2nvx2mbsrscg5y7gfa9skhb8p72ayanl8vl49pw24v4fh";
    inherit dependencies buildDependencies features;
  };
  libc_0_2_36_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "libc";
    version = "0.2.36";
    authors = [ "The Rust Project Developers" ];
    sha256 = "01633h4yfqm0s302fm0dlba469bx8y6cs4nqc8bqrmjqxfxn515l";
    inherit dependencies buildDependencies features;
  };
  libloading_0_5_0_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "libloading";
    version = "0.5.0";
    authors = [ "Simonas Kazlauskas <libloading@kazlauskas.me>" ];
    sha256 = "11vzjaka1y979aril4ggwp33p35yz2isvx9m5w88r5sdcmq6iscn";
    build = "build.rs";
    inherit dependencies buildDependencies features;
  };
  log_0_4_1_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "log";
    version = "0.4.1";
    authors = [ "The Rust Project Developers" ];
    sha256 = "01vm8yy3wngvyj6qp1x3xpcb4xq7v67yn9l7fsma8kz28mliz90d";
    inherit dependencies buildDependencies features;
  };
  memchr_1_0_2_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "memchr";
    version = "1.0.2";
    authors = [ "Andrew Gallant <jamslam@gmail.com>" "bluss" ];
    sha256 = "0dfb8ifl9nrc9kzgd5z91q6qg87sh285q1ih7xgrsglmqfav9lg7";
    inherit dependencies buildDependencies features;
  };
  memchr_2_0_1_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "memchr";
    version = "2.0.1";
    authors = [ "Andrew Gallant <jamslam@gmail.com>" "bluss" ];
    sha256 = "0ls2y47rjwapjdax6bp974gdp06ggm1v8d1h69wyydmh1nhgm5gr";
    inherit dependencies buildDependencies features;
  };
  nom_3_2_1_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "nom";
    version = "3.2.1";
    authors = [ "contact@geoffroycouprie.com" ];
    sha256 = "1vcllxrz9hdw6j25kn020ka3psz1vkaqh1hm3yfak2240zrxgi07";
    inherit dependencies buildDependencies features;
  };
  num_0_1_42_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "num";
    version = "0.1.42";
    authors = [ "The Rust Project Developers" ];
    sha256 = "1632gczzrmmxdsj3jignwcr793jq8vxw3qkdzpdvbip3vaf1ljgq";
    inherit dependencies buildDependencies features;
  };
  num_integer_0_1_36_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "num-integer";
    version = "0.1.36";
    authors = [ "The Rust Project Developers" ];
    sha256 = "1fjprz9h8b04zrsnfmkkfhiw4w852bbh16hy8w9ahlcdhg77i66y";
    inherit dependencies buildDependencies features;
  };
  num_iter_0_1_35_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "num-iter";
    version = "0.1.35";
    authors = [ "The Rust Project Developers" ];
    sha256 = "12w49r9als1ihg6rc3qkj673vwi0bmh47pzy6x4samlb07w074mi";
    inherit dependencies buildDependencies features;
  };
  num_traits_0_2_0_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "num-traits";
    version = "0.2.0";
    authors = [ "The Rust Project Developers" ];
    sha256 = "1c11xq07jbv8skvlr4vka0by71mpdgvbvrnid2gp2kdk41ksxv89";
    inherit dependencies buildDependencies features;
  };
  num_cpus_1_8_0_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "num_cpus";
    version = "1.8.0";
    authors = [ "Sean McArthur <sean@seanmonstar.com>" ];
    sha256 = "1y6qnd9r8ga6y8mvlabdrr73nc8cshjjlzbvnanzyj9b8zzkfwk2";
    inherit dependencies buildDependencies features;
  };
  proc_macro2_0_2_2_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "proc-macro2";
    version = "0.2.2";
    authors = [ "Alex Crichton <alex@alexcrichton.com>" ];
    sha256 = "0581ryvw7kxmd4xy9gsdfamqk5jlixr8k3ganl7wq08zgx7ib6j6";
    inherit dependencies buildDependencies features;
  };
  quote_0_4_2_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "quote";
    version = "0.4.2";
    authors = [ "David Tolnay <dtolnay@gmail.com>" ];
    sha256 = "0rzka356p113f9hdcdc8ha78qar3qd6jpap9wnf5dza9hfs2k4bc";
    inherit dependencies buildDependencies features;
  };
  redox_syscall_0_1_37_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "redox_syscall";
    version = "0.1.37";
    authors = [ "Jeremy Soller <jackpot51@gmail.com>" ];
    sha256 = "0qa0jl9cr3qp80an8vshp2mcn8rzvwiavs1398hq1vsjw7pc3h2v";
    libName = "syscall";
    inherit dependencies buildDependencies features;
  };
  redox_termios_0_1_1_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "redox_termios";
    version = "0.1.1";
    authors = [ "Jeremy Soller <jackpot51@gmail.com>" ];
    sha256 = "04s6yyzjca552hdaqlvqhp3vw0zqbc304md5czyd3axh56iry8wh";
    libPath = "src/lib.rs";
    inherit dependencies buildDependencies features;
  };
  regex_0_2_6_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "regex";
    version = "0.2.6";
    authors = [ "The Rust Project Developers" ];
    sha256 = "05yahhpgxlpp6vg82d3j7zsb54gzpd8sy19az3n3l13p14zgin4k";
    inherit dependencies buildDependencies features;
  };
  regex_syntax_0_4_2_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "regex-syntax";
    version = "0.4.2";
    authors = [ "The Rust Project Developers" ];
    sha256 = "1pch2dmdnh712c9d2k7mxbkl6wbr433x6asip65mp76cn8syrqdw";
    inherit dependencies buildDependencies features;
  };
  rustfbp_0_3_34_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "rustfbp";
    version = "0.3.34";
    authors = [ "Denis Michiels <dmichiels@gmail.com>" "Stewart Mackenzie <setori88@gmail.com>" ];
    src = ../rustfbp;
    inherit dependencies buildDependencies features;
  };
  syn_0_12_12_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "syn";
    version = "0.12.12";
    authors = [ "David Tolnay <dtolnay@gmail.com>" ];
    sha256 = "18i9qb1574zdl6w3rlkk3cf5gn5v2b2bqf4xi95xx100v6cr2k80";
    inherit dependencies buildDependencies features;
  };
  termcolor_0_3_4_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "termcolor";
    version = "0.3.4";
    authors = [ "Andrew Gallant <jamslam@gmail.com>" ];
    sha256 = "0vz88m4rjnv1brkvsanq88kpdzj2zi5r1rj4j04axfa94cz2bbm9";
    inherit dependencies buildDependencies features;
  };
  termion_1_5_1_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "termion";
    version = "1.5.1";
    authors = [ "ticki <Ticki@users.noreply.github.com>" "gycos <alexandre.bury@gmail.com>" "IGI-111 <igi-111@protonmail.com>" ];
    sha256 = "02gq4vd8iws1f3gjrgrgpajsk2bk43nds5acbbb4s8dvrdvr8nf1";
    inherit dependencies buildDependencies features;
  };
  thread_local_0_3_5_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "thread_local";
    version = "0.3.5";
    authors = [ "Amanieu d'Antras <amanieu@gmail.com>" ];
    sha256 = "0mkp0sp91aqsk7brgygai4igv751r1754rsxn37mig3ag5rx8np6";
    inherit dependencies buildDependencies features;
  };
  threadpool_1_7_1_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "threadpool";
    version = "1.7.1";
    authors = [ "The Rust Project Developers" "Corey Farwell <coreyf@rwell.org>" "Stefan Schindler <dns2utf8@estada.ch>" ];
    sha256 = "09g715plrn59kasvigqjrjqzcgqnaf6v6pia0xx03f18kvfmkq06";
    inherit dependencies buildDependencies features;
  };
  time_0_1_39_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "time";
    version = "0.1.39";
    authors = [ "The Rust Project Developers" ];
    sha256 = "1ryy3bwhvyzj6fym123il38mk9ranm4vradj2a47l5ij8jd7w5if";
    inherit dependencies buildDependencies features;
  };
  unicode_xid_0_1_0_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "unicode-xid";
    version = "0.1.0";
    authors = [ "erick.tryzelaar <erick.tryzelaar@gmail.com>" "kwantam <kwantam@gmail.com>" ];
    sha256 = "05wdmwlfzxhq3nhsxn6wx4q8dhxzzfb9szsz6wiw092m1rjj01zj";
    inherit dependencies buildDependencies features;
  };
  unreachable_1_0_0_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "unreachable";
    version = "1.0.0";
    authors = [ "Jonathan Reem <jonathan.reem@gmail.com>" ];
    sha256 = "1am8czbk5wwr25gbp2zr007744fxjshhdqjz9liz7wl4pnv3whcf";
    inherit dependencies buildDependencies features;
  };
  utf8_ranges_1_0_0_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "utf8-ranges";
    version = "1.0.0";
    authors = [ "Andrew Gallant <jamslam@gmail.com>" ];
    sha256 = "0rzmqprwjv9yp1n0qqgahgm24872x6c0xddfym5pfndy7a36vkn0";
    inherit dependencies buildDependencies features;
  };
  void_1_0_2_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "void";
    version = "1.0.2";
    authors = [ "Jonathan Reem <jonathan.reem@gmail.com>" ];
    sha256 = "0h1dm0dx8dhf56a83k68mijyxigqhizpskwxfdrs1drwv2cdclv3";
    inherit dependencies buildDependencies features;
  };
  winapi_0_3_4_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "winapi";
    version = "0.3.4";
    authors = [ "Peter Atashian <retep998@gmail.com>" ];
    sha256 = "1qbrf5dcnd8j36cawby5d9r5vx07r0l4ryf672pfncnp8895k9lx";
    build = "build.rs";
    inherit dependencies buildDependencies features;
  };
  winapi_i686_pc_windows_gnu_0_4_0_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "winapi-i686-pc-windows-gnu";
    version = "0.4.0";
    authors = [ "Peter Atashian <retep998@gmail.com>" ];
    sha256 = "05ihkij18r4gamjpxj4gra24514can762imjzlmak5wlzidplzrp";
    build = "build.rs";
    inherit dependencies buildDependencies features;
  };
  winapi_x86_64_pc_windows_gnu_0_4_0_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "winapi-x86_64-pc-windows-gnu";
    version = "0.4.0";
    authors = [ "Peter Atashian <retep998@gmail.com>" ];
    sha256 = "0n1ylmlsb8yg1v583i4xy0qmqg42275flvbc51hdqjjfjcl9vlbj";
    build = "build.rs";
    inherit dependencies buildDependencies features;
  };
  wincolor_0_1_6_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "wincolor";
    version = "0.1.6";
    authors = [ "Andrew Gallant <jamslam@gmail.com>" ];
    sha256 = "0f8m3l86pw6qi31jidqj78pgd15xj914850lyvsxkbln4f1drv47";
    inherit dependencies buildDependencies features;
  };
  aho_corasick_0_6_4 = { features?(aho_corasick_0_6_4_features {}) }: aho_corasick_0_6_4_ {
    dependencies = mapFeatures features ([ memchr_2_0_1 ]);
  };
  aho_corasick_0_6_4_features = f: updateFeatures f (rec {
    aho_corasick_0_6_4.default = (f.aho_corasick_0_6_4.default or true);
    memchr_2_0_1.default = true;
  }) [ memchr_2_0_1_features ];
  all_crates_1_1_1 = { features?(all_crates_1_1_1_features {}) }: all_crates_1_1_1_ {
    dependencies = mapFeatures features ([ capnp_0_8_15 capnpc_0_8_8 env_logger_0_5_3 generate_msg_0_1_0 log_0_4_1 nom_3_2_1 rustfbp_0_3_34 ]);
  };
  all_crates_1_1_1_features = f: updateFeatures f (rec {
    all_crates_1_1_1.default = (f.all_crates_1_1_1.default or true);
    capnp_0_8_15.default = true;
    capnpc_0_8_8.default = true;
    env_logger_0_5_3.default = true;
    generate_msg_0_1_0.default = true;
    log_0_4_1.default = true;
    nom_3_2_1.default = true;
    rustfbp_0_3_34.default = true;
  }) [ capnp_0_8_15_features capnpc_0_8_8_features env_logger_0_5_3_features generate_msg_0_1_0_features log_0_4_1_features nom_3_2_1_features rustfbp_0_3_34_features ];
  atty_0_2_6 = { features?(atty_0_2_6_features {}) }: atty_0_2_6_ {
    dependencies = (if kernel == "redox" then mapFeatures features ([ termion_1_5_1 ]) else [])
      ++ (if (kernel == "linux" || kernel == "darwin") then mapFeatures features ([ libc_0_2_36 ]) else [])
      ++ (if kernel == "windows" then mapFeatures features ([ winapi_0_3_4 ]) else []);
  };
  atty_0_2_6_features = f: updateFeatures f (rec {
    atty_0_2_6.default = (f.atty_0_2_6.default or true);
    libc_0_2_36.default = (f.libc_0_2_36.default or false);
    termion_1_5_1.default = true;
    winapi_0_3_4.consoleapi = true;
    winapi_0_3_4.default = true;
    winapi_0_3_4.minwinbase = true;
    winapi_0_3_4.minwindef = true;
    winapi_0_3_4.processenv = true;
    winapi_0_3_4.winbase = true;
  }) [ termion_1_5_1_features libc_0_2_36_features winapi_0_3_4_features ];
  byteorder_1_2_1 = { features?(byteorder_1_2_1_features {}) }: byteorder_1_2_1_ {
    features = mkFeatures (features.byteorder_1_2_1 or {});
  };
  byteorder_1_2_1_features = f: updateFeatures f (rec {
    byteorder_1_2_1.default = (f.byteorder_1_2_1.default or true);
    byteorder_1_2_1.std =
      (f.byteorder_1_2_1.std or false) ||
      (f.byteorder_1_2_1.default or false) ||
      (byteorder_1_2_1.default or false);
  }) [];
  capnp_0_8_15 = { features?(capnp_0_8_15_features {}) }: capnp_0_8_15_ {
    dependencies = mapFeatures features ([ byteorder_1_2_1 ]);
    features = mkFeatures (features.capnp_0_8_15 or {});
  };
  capnp_0_8_15_features = f: updateFeatures f (rec {
    byteorder_1_2_1.default = true;
    capnp_0_8_15.default = (f.capnp_0_8_15.default or true);
    capnp_0_8_15.futures =
      (f.capnp_0_8_15.futures or false) ||
      (f.capnp_0_8_15.rpc or false) ||
      (capnp_0_8_15.rpc or false);
  }) [ byteorder_1_2_1_features ];
  capnpc_0_8_8 = { features?(capnpc_0_8_8_features {}) }: capnpc_0_8_8_ {
    dependencies = mapFeatures features ([ capnp_0_8_15 ]);
  };
  capnpc_0_8_8_features = f: updateFeatures f (rec {
    capnp_0_8_15.default = true;
    capnpc_0_8_8.default = (f.capnpc_0_8_8.default or true);
  }) [ capnp_0_8_15_features ];
  cc_1_0_4 = { features?(cc_1_0_4_features {}) }: cc_1_0_4_ {
    dependencies = mapFeatures features ([]);
    features = mkFeatures (features.cc_1_0_4 or {});
  };
  cc_1_0_4_features = f: updateFeatures f (rec {
    cc_1_0_4.default = (f.cc_1_0_4.default or true);
    cc_1_0_4.rayon =
      (f.cc_1_0_4.rayon or false) ||
      (f.cc_1_0_4.parallel or false) ||
      (cc_1_0_4.parallel or false);
  }) [];
  cfg_if_0_1_2 = { features?(cfg_if_0_1_2_features {}) }: cfg_if_0_1_2_ {};
  cfg_if_0_1_2_features = f: updateFeatures f (rec {
    cfg_if_0_1_2.default = (f.cfg_if_0_1_2.default or true);
  }) [];
  chrono_0_4_0 = { features?(chrono_0_4_0_features {}) }: chrono_0_4_0_ {
    dependencies = mapFeatures features ([ num_0_1_42 time_0_1_39 ]);
  };
  chrono_0_4_0_features = f: updateFeatures f (rec {
    chrono_0_4_0.default = (f.chrono_0_4_0.default or true);
    num_0_1_42.default = (f.num_0_1_42.default or false);
    time_0_1_39.default = true;
  }) [ num_0_1_42_features time_0_1_39_features ];
  env_logger_0_5_3 = { features?(env_logger_0_5_3_features {}) }: env_logger_0_5_3_ {
    dependencies = mapFeatures features ([ atty_0_2_6 chrono_0_4_0 log_0_4_1 termcolor_0_3_4 ]
      ++ (if features.env_logger_0_5_3.regex or false then [ regex_0_2_6 ] else []));
    features = mkFeatures (features.env_logger_0_5_3 or {});
  };
  env_logger_0_5_3_features = f: updateFeatures f (rec {
    atty_0_2_6.default = true;
    chrono_0_4_0.default = true;
    env_logger_0_5_3.default = (f.env_logger_0_5_3.default or true);
    env_logger_0_5_3.regex =
      (f.env_logger_0_5_3.regex or false) ||
      (f.env_logger_0_5_3.default or false) ||
      (env_logger_0_5_3.default or false);
    log_0_4_1.default = true;
    log_0_4_1.std = true;
    regex_0_2_6.default = true;
    termcolor_0_3_4.default = true;
  }) [ atty_0_2_6_features chrono_0_4_0_features log_0_4_1_features regex_0_2_6_features termcolor_0_3_4_features ];
  generate_msg_0_1_0 = { features?(generate_msg_0_1_0_features {}) }: generate_msg_0_1_0_ {
    dependencies = mapFeatures features ([ syn_0_12_12 ]);
  };
  generate_msg_0_1_0_features = f: updateFeatures f (rec {
    generate_msg_0_1_0.default = (f.generate_msg_0_1_0.default or true);
    syn_0_12_12.default = true;
    syn_0_12_12.full = true;
  }) [ syn_0_12_12_features ];
  lazy_static_1_0_0 = { features?(lazy_static_1_0_0_features {}) }: lazy_static_1_0_0_ {
    dependencies = mapFeatures features ([]);
    features = mkFeatures (features.lazy_static_1_0_0 or {});
  };
  lazy_static_1_0_0_features = f: updateFeatures f (rec {
    lazy_static_1_0_0.compiletest_rs =
      (f.lazy_static_1_0_0.compiletest_rs or false) ||
      (f.lazy_static_1_0_0.compiletest or false) ||
      (lazy_static_1_0_0.compiletest or false);
    lazy_static_1_0_0.default = (f.lazy_static_1_0_0.default or true);
    lazy_static_1_0_0.nightly =
      (f.lazy_static_1_0_0.nightly or false) ||
      (f.lazy_static_1_0_0.spin_no_std or false) ||
      (lazy_static_1_0_0.spin_no_std or false);
    lazy_static_1_0_0.spin =
      (f.lazy_static_1_0_0.spin or false) ||
      (f.lazy_static_1_0_0.spin_no_std or false) ||
      (lazy_static_1_0_0.spin_no_std or false);
  }) [];
  libc_0_2_36 = { features?(libc_0_2_36_features {}) }: libc_0_2_36_ {
    features = mkFeatures (features.libc_0_2_36 or {});
  };
  libc_0_2_36_features = f: updateFeatures f (rec {
    libc_0_2_36.default = (f.libc_0_2_36.default or true);
    libc_0_2_36.use_std =
      (f.libc_0_2_36.use_std or false) ||
      (f.libc_0_2_36.default or false) ||
      (libc_0_2_36.default or false);
  }) [];
  libloading_0_5_0 = { features?(libloading_0_5_0_features {}) }: libloading_0_5_0_ {
    dependencies = (if kernel == "windows" then mapFeatures features ([ winapi_0_3_4 ]) else []);
    buildDependencies = mapFeatures features ([ cc_1_0_4 ]);
  };
  libloading_0_5_0_features = f: updateFeatures f (rec {
    cc_1_0_4.default = true;
    libloading_0_5_0.default = (f.libloading_0_5_0.default or true);
    winapi_0_3_4.default = true;
    winapi_0_3_4.errhandlingapi = true;
    winapi_0_3_4.libloaderapi = true;
    winapi_0_3_4.winerror = true;
  }) [ cc_1_0_4_features winapi_0_3_4_features ];
  log_0_4_1 = { features?(log_0_4_1_features {}) }: log_0_4_1_ {
    dependencies = mapFeatures features ([ cfg_if_0_1_2 ]);
    features = mkFeatures (features.log_0_4_1 or {});
  };
  log_0_4_1_features = f: updateFeatures f (rec {
    cfg_if_0_1_2.default = true;
    log_0_4_1.default = (f.log_0_4_1.default or true);
  }) [ cfg_if_0_1_2_features ];
  memchr_1_0_2 = { features?(memchr_1_0_2_features {}) }: memchr_1_0_2_ {
    dependencies = mapFeatures features ([ ]
      ++ (if features.memchr_1_0_2.libc or false then [ libc_0_2_36 ] else []));
    features = mkFeatures (features.memchr_1_0_2 or {});
  };
  memchr_1_0_2_features = f: updateFeatures f (rec {
    libc_0_2_36.default = (f.libc_0_2_36.default or false);
    libc_0_2_36.use_std =
      (f.libc_0_2_36.use_std or false) ||
      (memchr_1_0_2.use_std or false) ||
      (f.memchr_1_0_2.use_std or false);
    memchr_1_0_2.default = (f.memchr_1_0_2.default or true);
    memchr_1_0_2.libc =
      (f.memchr_1_0_2.libc or false) ||
      (f.memchr_1_0_2.default or false) ||
      (memchr_1_0_2.default or false) ||
      (f.memchr_1_0_2.use_std or false) ||
      (memchr_1_0_2.use_std or false);
    memchr_1_0_2.use_std =
      (f.memchr_1_0_2.use_std or false) ||
      (f.memchr_1_0_2.default or false) ||
      (memchr_1_0_2.default or false);
  }) [ libc_0_2_36_features ];
  memchr_2_0_1 = { features?(memchr_2_0_1_features {}) }: memchr_2_0_1_ {
    dependencies = mapFeatures features ([ ]
      ++ (if features.memchr_2_0_1.libc or false then [ libc_0_2_36 ] else []));
    features = mkFeatures (features.memchr_2_0_1 or {});
  };
  memchr_2_0_1_features = f: updateFeatures f (rec {
    libc_0_2_36.default = (f.libc_0_2_36.default or false);
    libc_0_2_36.use_std =
      (f.libc_0_2_36.use_std or false) ||
      (memchr_2_0_1.use_std or false) ||
      (f.memchr_2_0_1.use_std or false);
    memchr_2_0_1.default = (f.memchr_2_0_1.default or true);
    memchr_2_0_1.libc =
      (f.memchr_2_0_1.libc or false) ||
      (f.memchr_2_0_1.default or false) ||
      (memchr_2_0_1.default or false) ||
      (f.memchr_2_0_1.use_std or false) ||
      (memchr_2_0_1.use_std or false);
    memchr_2_0_1.use_std =
      (f.memchr_2_0_1.use_std or false) ||
      (f.memchr_2_0_1.default or false) ||
      (memchr_2_0_1.default or false);
  }) [ libc_0_2_36_features ];
  nom_3_2_1 = { features?(nom_3_2_1_features {}) }: nom_3_2_1_ {
    dependencies = mapFeatures features ([ memchr_1_0_2 ]);
    features = mkFeatures (features.nom_3_2_1 or {});
  };
  nom_3_2_1_features = f: updateFeatures f (rec {
    memchr_1_0_2.default = (f.memchr_1_0_2.default or false);
    memchr_1_0_2.use_std =
      (f.memchr_1_0_2.use_std or false) ||
      (nom_3_2_1.std or false) ||
      (f.nom_3_2_1.std or false);
    nom_3_2_1.compiler_error =
      (f.nom_3_2_1.compiler_error or false) ||
      (f.nom_3_2_1.nightly or false) ||
      (nom_3_2_1.nightly or false);
    nom_3_2_1.default = (f.nom_3_2_1.default or true);
    nom_3_2_1.lazy_static =
      (f.nom_3_2_1.lazy_static or false) ||
      (f.nom_3_2_1.regexp_macros or false) ||
      (nom_3_2_1.regexp_macros or false);
    nom_3_2_1.regex =
      (f.nom_3_2_1.regex or false) ||
      (f.nom_3_2_1.regexp or false) ||
      (nom_3_2_1.regexp or false);
    nom_3_2_1.regexp =
      (f.nom_3_2_1.regexp or false) ||
      (f.nom_3_2_1.regexp_macros or false) ||
      (nom_3_2_1.regexp_macros or false);
    nom_3_2_1.std =
      (f.nom_3_2_1.std or false) ||
      (f.nom_3_2_1.default or false) ||
      (nom_3_2_1.default or false);
    nom_3_2_1.stream =
      (f.nom_3_2_1.stream or false) ||
      (f.nom_3_2_1.default or false) ||
      (nom_3_2_1.default or false);
  }) [ memchr_1_0_2_features ];
  num_0_1_42 = { features?(num_0_1_42_features {}) }: num_0_1_42_ {
    dependencies = mapFeatures features ([ num_integer_0_1_36 num_iter_0_1_35 num_traits_0_2_0 ]);
    features = mkFeatures (features.num_0_1_42 or {});
  };
  num_0_1_42_features = f: updateFeatures f (rec {
    num_0_1_42.bigint =
      (f.num_0_1_42.bigint or false) ||
      (f.num_0_1_42.default or false) ||
      (num_0_1_42.default or false);
    num_0_1_42.complex =
      (f.num_0_1_42.complex or false) ||
      (f.num_0_1_42.default or false) ||
      (num_0_1_42.default or false);
    num_0_1_42.default = (f.num_0_1_42.default or true);
    num_0_1_42.num-bigint =
      (f.num_0_1_42.num-bigint or false) ||
      (f.num_0_1_42.bigint or false) ||
      (num_0_1_42.bigint or false);
    num_0_1_42.num-complex =
      (f.num_0_1_42.num-complex or false) ||
      (f.num_0_1_42.complex or false) ||
      (num_0_1_42.complex or false);
    num_0_1_42.num-rational =
      (f.num_0_1_42.num-rational or false) ||
      (f.num_0_1_42.rational or false) ||
      (num_0_1_42.rational or false);
    num_0_1_42.rational =
      (f.num_0_1_42.rational or false) ||
      (f.num_0_1_42.default or false) ||
      (num_0_1_42.default or false);
    num_0_1_42.rustc-serialize =
      (f.num_0_1_42.rustc-serialize or false) ||
      (f.num_0_1_42.default or false) ||
      (num_0_1_42.default or false);
    num_integer_0_1_36.default = true;
    num_iter_0_1_35.default = true;
    num_traits_0_2_0.default = true;
  }) [ num_integer_0_1_36_features num_iter_0_1_35_features num_traits_0_2_0_features ];
  num_integer_0_1_36 = { features?(num_integer_0_1_36_features {}) }: num_integer_0_1_36_ {
    dependencies = mapFeatures features ([ num_traits_0_2_0 ]);
    features = mkFeatures (features.num_integer_0_1_36 or {});
  };
  num_integer_0_1_36_features = f: updateFeatures f (rec {
    num_integer_0_1_36.default = (f.num_integer_0_1_36.default or true);
    num_integer_0_1_36.std =
      (f.num_integer_0_1_36.std or false) ||
      (f.num_integer_0_1_36.default or false) ||
      (num_integer_0_1_36.default or false);
    num_traits_0_2_0.default = (f.num_traits_0_2_0.default or false);
  }) [ num_traits_0_2_0_features ];
  num_iter_0_1_35 = { features?(num_iter_0_1_35_features {}) }: num_iter_0_1_35_ {
    dependencies = mapFeatures features ([ num_integer_0_1_36 num_traits_0_2_0 ]);
    features = mkFeatures (features.num_iter_0_1_35 or {});
  };
  num_iter_0_1_35_features = f: updateFeatures f (rec {
    num_integer_0_1_36.default = (f.num_integer_0_1_36.default or false);
    num_iter_0_1_35.default = (f.num_iter_0_1_35.default or true);
    num_iter_0_1_35.std =
      (f.num_iter_0_1_35.std or false) ||
      (f.num_iter_0_1_35.default or false) ||
      (num_iter_0_1_35.default or false);
    num_traits_0_2_0.default = (f.num_traits_0_2_0.default or false);
  }) [ num_integer_0_1_36_features num_traits_0_2_0_features ];
  num_traits_0_2_0 = { features?(num_traits_0_2_0_features {}) }: num_traits_0_2_0_ {
    features = mkFeatures (features.num_traits_0_2_0 or {});
  };
  num_traits_0_2_0_features = f: updateFeatures f (rec {
    num_traits_0_2_0.default = (f.num_traits_0_2_0.default or true);
    num_traits_0_2_0.std =
      (f.num_traits_0_2_0.std or false) ||
      (f.num_traits_0_2_0.default or false) ||
      (num_traits_0_2_0.default or false);
  }) [];
  num_cpus_1_8_0 = { features?(num_cpus_1_8_0_features {}) }: num_cpus_1_8_0_ {
    dependencies = mapFeatures features ([ libc_0_2_36 ]);
  };
  num_cpus_1_8_0_features = f: updateFeatures f (rec {
    libc_0_2_36.default = true;
    num_cpus_1_8_0.default = (f.num_cpus_1_8_0.default or true);
  }) [ libc_0_2_36_features ];
  proc_macro2_0_2_2 = { features?(proc_macro2_0_2_2_features {}) }: proc_macro2_0_2_2_ {
    dependencies = mapFeatures features ([ unicode_xid_0_1_0 ]);
    features = mkFeatures (features.proc_macro2_0_2_2 or {});
  };
  proc_macro2_0_2_2_features = f: updateFeatures f (rec {
    proc_macro2_0_2_2.default = (f.proc_macro2_0_2_2.default or true);
    unicode_xid_0_1_0.default = true;
  }) [ unicode_xid_0_1_0_features ];
  quote_0_4_2 = { features?(quote_0_4_2_features {}) }: quote_0_4_2_ {
    dependencies = mapFeatures features ([ proc_macro2_0_2_2 ]);
  };
  quote_0_4_2_features = f: updateFeatures f (rec {
    proc_macro2_0_2_2.default = true;
    quote_0_4_2.default = (f.quote_0_4_2.default or true);
  }) [ proc_macro2_0_2_2_features ];
  redox_syscall_0_1_37 = { features?(redox_syscall_0_1_37_features {}) }: redox_syscall_0_1_37_ {};
  redox_syscall_0_1_37_features = f: updateFeatures f (rec {
    redox_syscall_0_1_37.default = (f.redox_syscall_0_1_37.default or true);
  }) [];
  redox_termios_0_1_1 = { features?(redox_termios_0_1_1_features {}) }: redox_termios_0_1_1_ {
    dependencies = mapFeatures features ([ redox_syscall_0_1_37 ]);
  };
  redox_termios_0_1_1_features = f: updateFeatures f (rec {
    redox_syscall_0_1_37.default = true;
    redox_termios_0_1_1.default = (f.redox_termios_0_1_1.default or true);
  }) [ redox_syscall_0_1_37_features ];
  regex_0_2_6 = { features?(regex_0_2_6_features {}) }: regex_0_2_6_ {
    dependencies = mapFeatures features ([ aho_corasick_0_6_4 memchr_2_0_1 regex_syntax_0_4_2 thread_local_0_3_5 utf8_ranges_1_0_0 ]);
    features = mkFeatures (features.regex_0_2_6 or {});
  };
  regex_0_2_6_features = f: updateFeatures f (rec {
    aho_corasick_0_6_4.default = true;
    memchr_2_0_1.default = true;
    regex_0_2_6.default = (f.regex_0_2_6.default or true);
    regex_0_2_6.simd =
      (f.regex_0_2_6.simd or false) ||
      (f.regex_0_2_6.simd-accel or false) ||
      (regex_0_2_6.simd-accel or false);
    regex_syntax_0_4_2.default = true;
    thread_local_0_3_5.default = true;
    utf8_ranges_1_0_0.default = true;
  }) [ aho_corasick_0_6_4_features memchr_2_0_1_features regex_syntax_0_4_2_features thread_local_0_3_5_features utf8_ranges_1_0_0_features ];
  regex_syntax_0_4_2 = { features?(regex_syntax_0_4_2_features {}) }: regex_syntax_0_4_2_ {};
  regex_syntax_0_4_2_features = f: updateFeatures f (rec {
    regex_syntax_0_4_2.default = (f.regex_syntax_0_4_2.default or true);
  }) [];
  rustfbp_0_3_34 = { features?(rustfbp_0_3_34_features {}) }: rustfbp_0_3_34_ {
    dependencies = mapFeatures features ([ capnp_0_8_15 env_logger_0_5_3 libloading_0_5_0 threadpool_1_7_1 ]);
  };
  rustfbp_0_3_34_features = f: updateFeatures f (rec {
    capnp_0_8_15.default = true;
    env_logger_0_5_3.default = true;
    libloading_0_5_0.default = true;
    rustfbp_0_3_34.default = (f.rustfbp_0_3_34.default or true);
    threadpool_1_7_1.default = true;
  }) [ capnp_0_8_15_features env_logger_0_5_3_features libloading_0_5_0_features threadpool_1_7_1_features ];
  syn_0_12_12 = { features?(syn_0_12_12_features {}) }: syn_0_12_12_ {
    dependencies = mapFeatures features ([ proc_macro2_0_2_2 unicode_xid_0_1_0 ]
      ++ (if features.syn_0_12_12.quote or false then [ quote_0_4_2 ] else []));
    features = mkFeatures (features.syn_0_12_12 or {});
  };
  syn_0_12_12_features = f: updateFeatures f (rec {
    proc_macro2_0_2_2.default = true;
    quote_0_4_2.default = true;
    syn_0_12_12.clone-impls =
      (f.syn_0_12_12.clone-impls or false) ||
      (f.syn_0_12_12.default or false) ||
      (syn_0_12_12.default or false);
    syn_0_12_12.default = (f.syn_0_12_12.default or true);
    syn_0_12_12.derive =
      (f.syn_0_12_12.derive or false) ||
      (f.syn_0_12_12.default or false) ||
      (syn_0_12_12.default or false);
    syn_0_12_12.parsing =
      (f.syn_0_12_12.parsing or false) ||
      (f.syn_0_12_12.default or false) ||
      (syn_0_12_12.default or false);
    syn_0_12_12.printing =
      (f.syn_0_12_12.printing or false) ||
      (f.syn_0_12_12.default or false) ||
      (syn_0_12_12.default or false);
    syn_0_12_12.quote =
      (f.syn_0_12_12.quote or false) ||
      (f.syn_0_12_12.printing or false) ||
      (syn_0_12_12.printing or false);
    unicode_xid_0_1_0.default = true;
  }) [ proc_macro2_0_2_2_features quote_0_4_2_features unicode_xid_0_1_0_features ];
  termcolor_0_3_4 = { features?(termcolor_0_3_4_features {}) }: termcolor_0_3_4_ {
    dependencies = (if kernel == "windows" then mapFeatures features ([ wincolor_0_1_6 ]) else []);
  };
  termcolor_0_3_4_features = f: updateFeatures f (rec {
    termcolor_0_3_4.default = (f.termcolor_0_3_4.default or true);
    wincolor_0_1_6.default = true;
  }) [ wincolor_0_1_6_features ];
  termion_1_5_1 = { features?(termion_1_5_1_features {}) }: termion_1_5_1_ {
    dependencies = (if !(kernel == "redox") then mapFeatures features ([ libc_0_2_36 ]) else [])
      ++ (if kernel == "redox" then mapFeatures features ([ redox_syscall_0_1_37 redox_termios_0_1_1 ]) else []);
  };
  termion_1_5_1_features = f: updateFeatures f (rec {
    libc_0_2_36.default = true;
    redox_syscall_0_1_37.default = true;
    redox_termios_0_1_1.default = true;
    termion_1_5_1.default = (f.termion_1_5_1.default or true);
  }) [ libc_0_2_36_features redox_syscall_0_1_37_features redox_termios_0_1_1_features ];
  thread_local_0_3_5 = { features?(thread_local_0_3_5_features {}) }: thread_local_0_3_5_ {
    dependencies = mapFeatures features ([ lazy_static_1_0_0 unreachable_1_0_0 ]);
  };
  thread_local_0_3_5_features = f: updateFeatures f (rec {
    lazy_static_1_0_0.default = true;
    thread_local_0_3_5.default = (f.thread_local_0_3_5.default or true);
    unreachable_1_0_0.default = true;
  }) [ lazy_static_1_0_0_features unreachable_1_0_0_features ];
  threadpool_1_7_1 = { features?(threadpool_1_7_1_features {}) }: threadpool_1_7_1_ {
    dependencies = mapFeatures features ([ num_cpus_1_8_0 ]);
  };
  threadpool_1_7_1_features = f: updateFeatures f (rec {
    num_cpus_1_8_0.default = true;
    threadpool_1_7_1.default = (f.threadpool_1_7_1.default or true);
  }) [ num_cpus_1_8_0_features ];
  time_0_1_39 = { features?(time_0_1_39_features {}) }: time_0_1_39_ {
    dependencies = mapFeatures features ([ libc_0_2_36 ])
      ++ (if kernel == "redox" then mapFeatures features ([ redox_syscall_0_1_37 ]) else [])
      ++ (if kernel == "windows" then mapFeatures features ([ winapi_0_3_4 ]) else []);
  };
  time_0_1_39_features = f: updateFeatures f (rec {
    libc_0_2_36.default = true;
    redox_syscall_0_1_37.default = true;
    time_0_1_39.default = (f.time_0_1_39.default or true);
    winapi_0_3_4.default = true;
    winapi_0_3_4.minwinbase = true;
    winapi_0_3_4.minwindef = true;
    winapi_0_3_4.ntdef = true;
    winapi_0_3_4.profileapi = true;
    winapi_0_3_4.std = true;
    winapi_0_3_4.sysinfoapi = true;
    winapi_0_3_4.timezoneapi = true;
  }) [ libc_0_2_36_features redox_syscall_0_1_37_features winapi_0_3_4_features ];
  unicode_xid_0_1_0 = { features?(unicode_xid_0_1_0_features {}) }: unicode_xid_0_1_0_ {
    features = mkFeatures (features.unicode_xid_0_1_0 or {});
  };
  unicode_xid_0_1_0_features = f: updateFeatures f (rec {
    unicode_xid_0_1_0.default = (f.unicode_xid_0_1_0.default or true);
  }) [];
  unreachable_1_0_0 = { features?(unreachable_1_0_0_features {}) }: unreachable_1_0_0_ {
    dependencies = mapFeatures features ([ void_1_0_2 ]);
  };
  unreachable_1_0_0_features = f: updateFeatures f (rec {
    unreachable_1_0_0.default = (f.unreachable_1_0_0.default or true);
    void_1_0_2.default = (f.void_1_0_2.default or false);
  }) [ void_1_0_2_features ];
  utf8_ranges_1_0_0 = { features?(utf8_ranges_1_0_0_features {}) }: utf8_ranges_1_0_0_ {};
  utf8_ranges_1_0_0_features = f: updateFeatures f (rec {
    utf8_ranges_1_0_0.default = (f.utf8_ranges_1_0_0.default or true);
  }) [];
  void_1_0_2 = { features?(void_1_0_2_features {}) }: void_1_0_2_ {
    features = mkFeatures (features.void_1_0_2 or {});
  };
  void_1_0_2_features = f: updateFeatures f (rec {
    void_1_0_2.default = (f.void_1_0_2.default or true);
    void_1_0_2.std =
      (f.void_1_0_2.std or false) ||
      (f.void_1_0_2.default or false) ||
      (void_1_0_2.default or false);
  }) [];
  winapi_0_3_4 = { features?(winapi_0_3_4_features {}) }: winapi_0_3_4_ {
    dependencies = (if kernel == "i686-pc-windows-gnu" then mapFeatures features ([ winapi_i686_pc_windows_gnu_0_4_0 ]) else [])
      ++ (if kernel == "x86_64-pc-windows-gnu" then mapFeatures features ([ winapi_x86_64_pc_windows_gnu_0_4_0 ]) else []);
    features = mkFeatures (features.winapi_0_3_4 or {});
  };
  winapi_0_3_4_features = f: updateFeatures f (rec {
    winapi_0_3_4.default = (f.winapi_0_3_4.default or true);
    winapi_i686_pc_windows_gnu_0_4_0.default = true;
    winapi_x86_64_pc_windows_gnu_0_4_0.default = true;
  }) [ winapi_i686_pc_windows_gnu_0_4_0_features winapi_x86_64_pc_windows_gnu_0_4_0_features ];
  winapi_i686_pc_windows_gnu_0_4_0 = { features?(winapi_i686_pc_windows_gnu_0_4_0_features {}) }: winapi_i686_pc_windows_gnu_0_4_0_ {};
  winapi_i686_pc_windows_gnu_0_4_0_features = f: updateFeatures f (rec {
    winapi_i686_pc_windows_gnu_0_4_0.default = (f.winapi_i686_pc_windows_gnu_0_4_0.default or true);
  }) [];
  winapi_x86_64_pc_windows_gnu_0_4_0 = { features?(winapi_x86_64_pc_windows_gnu_0_4_0_features {}) }: winapi_x86_64_pc_windows_gnu_0_4_0_ {};
  winapi_x86_64_pc_windows_gnu_0_4_0_features = f: updateFeatures f (rec {
    winapi_x86_64_pc_windows_gnu_0_4_0.default = (f.winapi_x86_64_pc_windows_gnu_0_4_0.default or true);
  }) [];
  wincolor_0_1_6 = { features?(wincolor_0_1_6_features {}) }: wincolor_0_1_6_ {
    dependencies = mapFeatures features ([ winapi_0_3_4 ]);
  };
  wincolor_0_1_6_features = f: updateFeatures f (rec {
    winapi_0_3_4.consoleapi = true;
    winapi_0_3_4.default = true;
    winapi_0_3_4.minwindef = true;
    winapi_0_3_4.processenv = true;
    winapi_0_3_4.winbase = true;
    winapi_0_3_4.wincon = true;
    wincolor_0_1_6.default = (f.wincolor_0_1_6.default or true);
  }) [ winapi_0_3_4_features ];
}
